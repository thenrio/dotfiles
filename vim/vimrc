set nocompatible                " choose no compatibility with legacy vi
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" vundle {{{

Bundle 'gmarik/vundle'

" snippets
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'honza/snipmate-snippets'
Bundle 'garbas/vim-snipmate'

" fuzzy finder
Bundle 'kien/ctrlp.vim'

" general pope
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'

" langages
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-rails'
Bundle 'vim-scripts/vim-coffee-script'
Bundle 'plasticboy/vim-markdown'
Bundle 'lukaszb/vim-web-indent.git'

" }}}
"

" http://mislav.uniqpath.com/2011/12/vim-revisited/
" http://nvie.com/posts/how-i-boosted-my-vim/
syntax enable
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation

" space, tab
set tabstop=2 shiftwidth=2      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode

" Search
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" mouse is disabled set mouse=a to enable it or toggle mouse (F4)

" paste
set pastetoggle=<F2>

" Backup
set nobackup
set noswapfile

" UI
set showmatch              " brackets/braces that is
set matchtime=5            " duration to show matching brace (1/10 sec)
set visualbell             " no bells
set ruler                  " show line and col
set laststatus=2           " always show the status line
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
set nolazyredraw           " turn off lazy redraw
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling

" encoding
set encoding=utf-8

" Vim behaviour {{{
set hidden                      " hide buffers instead of closing them this
                                "    means that the current buffer can be put
                                "    to background without being written; and
                                "    that marks and undo history are preserved
set switchbuf=useopen           " reveal already opened files from the
                                " quickfix window instead of opening new
                                " buffers
set history=1000                " remember more commands and search history
set undolevels=1000             " use many muchos levels of undo
set undofile                    " keep a persistent backup file
set undodir=~/tmp/vim,/tmp
" }}}

" plugin configuration {{{

" ---------------------------------------------------------------------------
" netrw {{{
" ---------------------------------------------------------------------------
let g:netrw_liststyle= 3
" }}} 

" ---------------------------------------------------------------------------
" ctrlp {{{
" ---------------------------------------------------------------------------
let g:ctrlp_working_path_mode = 'rc'
let g:ctrlp_custom_ignore = { 
  \ 'dir':  '\.git$\|\.hg$\|\.svn$', 
  \ 'file': '\.exe$\|\.so$\|\.dll$',
  \ }
" }}} 
 
" ---------------------------------------------------------------------------
" tags {{{
" ---------------------------------------------------------------------------
set tags=./.tags
" }}} 

" ---------------------------------------------------------------------------
" funs {{{
" ---------------------------------------------------------------------------
function! StripWhitespace()
  exec ':%s/ \+$//'
endfunction
" }}} 

" commands {{{
command! EditParentDirectory e %:p:h
" }}}


" mappings {{{
" Change the mapleader from \ to ,
let mapleader=","

" Shortcut mappings {{{
" saves on left shift... kills ; binding in normal and visual mode 
nnoremap ; :
vnoremap ; :

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

nmap <leader>s :call StripWhitespace()<CR>
" }}}
