set nocompatible                " choose no compatibility with legacy vi
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" vundle {{{
" vim +BundleInstall +qall
Plugin 'gmarik/Vundle.vim'

" color
Plugin 'altercation/vim-colors-solarized'

" snippets
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'honza/vim-snippets'
Plugin 'garbas/vim-snipmate'

" fuzzy finder
Plugin 'kien/ctrlp.vim'

" edit
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-endwise'
Plugin 'edsono/vim-matchit'

" command
Plugin 'tpope/vim-unimpaired'

" code
Plugin 'tpope/vim-commentary'

" git
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" langages
Plugin 'vim-ruby/vim-ruby'
Plugin 'klen/python-mode'
Plugin 'ecomba/vim-ruby-refactoring'
Plugin 'tpope/vim-rails'
Plugin 'pangloss/vim-javascript'
Plugin 'vim-scripts/vim-coffee-script'
Plugin 'plasticboy/vim-markdown'
Plugin 'lukaszb/vim-web-indent.git'
Plugin 'juvenn/mustache.vim.git'
Plugin 'nono/vim-handlebars'
Plugin 'jnwhiteh/vim-golang'

" art
Plugin 'vim-scripts/DrawIt'

" end of plugins
call vundle#end()
" }}}
"

" http://mislav.uniqpath.com/2011/12/vim-revisited/
" http://nvie.com/posts/how-i-boosted-my-vim/
syntax enable
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation

" color
set background=dark
colorscheme solarized

" soft tab, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab
set backspace=indent,eol,start  " backspace through everything in insert mode

" Search
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" mouse is disabled set mouse=a to enable it or toggle mouse (F4)

" paste
set pastetoggle=<F2>

" Backup
set nobackup
set noswapfile

" UI
set showmatch              " brackets/braces that is
set matchtime=5            " duration to show matching brace (1/10 sec)
set visualbell             " no bells
set ruler                  " show line and col
set laststatus=2           " always show the status line
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
set nolazyredraw           " turn off lazy redraw
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling
set nu                     " numbers

" encoding
set encoding=utf-8

" Vim behaviour {{{
set hidden                      " hide buffers instead of closing them this
                                "    means that the current buffer can be put
                                "    to background without being written; and
                                "    that marks and undo history are preserved
set switchbuf=useopen           " reveal already opened files from the
                                " quickfix window instead of opening new
                                " buffers
set history=1000                " remember more commands and search history
set undolevels=1000             " use many muchos levels of undo
set undofile                    " keep a persistent backup file
set undodir=~/tmp/vim,/tmp
" }}}

" ---------------------------------------------------------------------------
" tags {{{
" ---------------------------------------------------------------------------
" main mapping, go to first matching tag
map tt <c-]>
" }}}

" ---------------------------------------------------------------------------
" mappings {{{
" ---------------------------------------------------------------------------
" Change the mapleader from \ to ,
let mapleader=","

" Shortcut mappings {{{
" saves on left shift... kills ; binding in normal and visual mode
nnoremap ; :
vnoremap ; :

" Reselect visual block after indent/outden
vnoremap < <gv
vnoremap > >gv

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>
" }}}

" ---------------------------------------------------------------------------
" strip white spaces {{{
" ---------------------------------------------------------------------------
function! StripWhitespace()
  exec ':%s/ \+$//'
endfunction
" }}}

nmap <leader>s :call StripWhitespace()<CR>:w<CR>
" }}}
