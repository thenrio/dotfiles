set nocompatible                " choose no compatibility with legacy vi

call plug#begin('~/.vim/plugged')
" plug {{{
" see https://github.com/junegunn/vim-plug/wiki/faq

" color
Plug 'altercation/vim-colors-solarized'

" snippets
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'honza/vim-snippets'
Plug 'garbas/vim-snipmate'

" fuzzy finder
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" edit
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-endwise'

" command
Plug 'tpope/vim-unimpaired'

" code
Plug 'tpope/vim-commentary'

" git
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" langages/syntax
Plug 'HerringtonDarkholme/yats.vim'
Plug 'Matt-Deacalion/vim-systemd-syntax', { 'for': 'sh' }
Plug 'elixir-lang/vim-elixir',            { 'for': 'elixir' }
Plug 'fatih/vim-go',                      { 'for': 'go' }
Plug 'jnwhiteh/vim-golang',               { 'for': 'go' }
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'plasticboy/vim-markdown',           { 'for': 'markdown' }
Plug 'posva/vim-vue'
Plug 'rust-lang/rust.vim'
Plug 'tpope/vim-rails',                   { 'for': 'ruby' }
Plug 'vim-ruby/vim-ruby',                 { 'for': 'ruby' }
Plug 'vim-scripts/bats.vim',              { 'for': 'sh' }

" art
Plug 'godlygeek/tabular'
Plug 'vim-scripts/DrawIt'

" end of plugins
call plug#end()
" }}}
"

" http://mislav.net/2011/12/vim-revisited/
" http://nvie.com/posts/how-i-boosted-my-vim/
set showcmd                     " display incomplete commands

" color
set background=dark
colorscheme solarized

" soft tab, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab
set backspace=indent,eol,start  " backspace through everything in insert mode

" Search
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" mouse is disabled set mouse=a to enable it or toggle mouse (F4)

" paste
set pastetoggle=<F2>

" Backup
set nobackup
set noswapfile

" UI
set showmatch              " brackets/braces that is
set matchtime=5            " duration to show matching brace (1/10 sec)
set visualbell             " no bells
set ruler                  " show line and col
set laststatus=2           " always show the status line
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
set nolazyredraw           " turn off lazy redraw
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling
set nu                     " numbers

" encoding
set encoding=utf-8

" Vim behaviour {{{
set hidden                      " hide buffers instead of closing them this
                                "    means that the current buffer can be put
                                "    to background without being written; and
                                "    that marks and undo history are preserved
set switchbuf=useopen           " reveal already opened files from the
                                " quickfix window instead of opening new
                                " buffers
set history=1000                " remember more commands and search history
set undolevels=1000             " use many muchos levels of undo
set undofile                    " keep a persistent backup file
set undodir=~/tmp/vim,/tmp
" }}}

" ---------------------------------------------------------------------------
" tags {{{
" ---------------------------------------------------------------------------
" main mapping, go to first matching tag
map tt <c-]>
" }}}

" ---------------------------------------------------------------------------
" mappings {{{
" ---------------------------------------------------------------------------
" Change the mapleader from \ to ,
let mapleader=","

" Shortcut mappings {{{
"
" https://nvie.com/posts/how-i-boosted-my-vim/#get-efficient-shortcut-mappings
" swap : and ;
" Predicates: : is more used than ;, saves left shift
" Downside: 
" * breaks map where rhs has : :)
" * get confused on other vims?
noremap ; :
vnoremap ; :
" nnoremap : ;
" vnoremap : ;

" Reselect visual block after indent/outden
vnoremap < <gv
vnoremap > >gv

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>
" }}}

" ---------------------------------------------------------------------------
" strip white spaces {{{
" ---------------------------------------------------------------------------
function! StripWhitespace()
  exec ':%s/ \+$//'
endfunction

function! s:maybe_replace( something, else )
  try
    execute ':% s/' . a:something . '/' . a:else . '/g'
  catch /^Vim\%((\a\+)\)\=:E486/
  endtry
endfunction

function! s:surrounding_craze( char, replacement )
  for c in [ '(', '\[', '{' ]
    call s:maybe_replace( c . a:char, c . a:replacement )
  endfor
  for c in [ ')', ']', '}' ]
    call s:maybe_replace( a:char . c, a:replacement . c )
  endfor
endfunction

function! SpaceCrazeLess()
  call s:surrounding_craze( ' ', '' )
endfunction
" }}}

nmap <leader>s :call StripWhitespace()<CR>:w<CR>
" }}}
"
